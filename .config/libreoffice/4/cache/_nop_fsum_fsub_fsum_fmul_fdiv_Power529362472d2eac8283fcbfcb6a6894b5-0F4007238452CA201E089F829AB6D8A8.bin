//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25773113
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_75, texmode_independent
.address_size 64

	// .globl	DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power

.entry DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power(
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_0,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_1,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_2,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_3,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_4,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_5,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_6,
	.param .f64 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_7
)
{
	.reg .pred 	%p<49>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<56>;
	.reg .f64 	%fd<296>;
	.reg .b64 	%rd<32>;


	ld.param.u64 	%rd12, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_6];
	mov.b32	%r19, %envreg3;
	mov.u32 	%r20, %ctaid.x;
	mov.u32 	%r21, %ntid.x;
	mad.lo.s32 	%r22, %r20, %r21, %r19;
	mov.u32 	%r23, %tid.x;
	add.s32 	%r1, %r22, %r23;
	mov.f64 	%fd276, 0d7FFFFFFFE0000000;
	setp.gt.s32	%p2, %r1, 4;
	@%p2 bra 	BB0_2;

	mul.wide.s32 	%rd13, %r1, 8;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.f64 	%fd276, [%rd14];

BB0_2:
	abs.f64 	%fd59, %fd276;
	setp.gtu.f64	%p3, %fd59, 0d7FF0000000000000;
	or.pred  	%p5, %p3, %p2;
	selp.f64	%fd3, 0d0000000000000000, %fd276, %p5;
	setp.eq.f64	%p6, %fd3, 0d3FF0000000000000;
	mov.f64 	%fd281, 0d3FF0000000000000;
	@%p6 bra 	BB0_28;

	abs.f64 	%fd4, %fd3;
	setp.gtu.f64	%p7, %fd4, 0d7FF0000000000000;
	@%p7 bra 	BB0_27;
	bra.uni 	BB0_4;

BB0_27:
	add.f64 	%fd281, %fd3, 0d3FFCAC083126E979;
	bra.uni 	BB0_28;

BB0_4:
	setp.eq.f64	%p8, %fd3, 0d7FF0000000000000;
	@%p8 bra 	BB0_26;
	bra.uni 	BB0_5;

BB0_26:
	mov.f64 	%fd246, 0d3FFCAC083126E979;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r44}, %fd246;
	}
	setp.gt.s32	%p25, %r44, -1;
	selp.f64	%fd281, 0d7FF0000000000000, 0d0000000000000000, %p25;
	bra.uni 	BB0_28;

BB0_5:
	mov.f64 	%fd60, 0d3FFCAC083126E979;
	mov.f64 	%fd61, 0d3FE0000000000000;
	mul.rn.f64 	%fd62, %fd61, %fd60;
	cvt.rzi.f64.f64	%fd63, %fd62;
	mov.f64 	%fd64, 0d4000000000000000;
	mul.rn.f64 	%fd65, %fd64, %fd63;
	sub.f64 	%fd66, %fd60, %fd65;
	abs.f64 	%fd5, %fd66;
	setp.eq.f64	%p9, %fd3, 0d0000000000000000;
	@%p9 bra 	BB0_25;
	bra.uni 	BB0_6;

BB0_25:
	setp.eq.f64	%p24, %fd5, 0d3FF0000000000000;
	selp.f64	%fd281, %fd3, 0d0000000000000000, %p24;
	bra.uni 	BB0_28;

BB0_6:
	setp.eq.f64	%p10, %fd3, 0dFFF0000000000000;
	@%p10 bra 	BB0_23;
	bra.uni 	BB0_7;

BB0_23:
	neg.f64 	%fd281, %fd3;
	setp.neu.f64	%p23, %fd5, 0d3FF0000000000000;
	@%p23 bra 	BB0_28;

	mov.b64 	 %rd17, %fd281;
	xor.b64  	%rd18, %rd17, -9223372036854775808;
	mov.b64 	 %fd281, %rd18;
	bra.uni 	BB0_28;

BB0_7:
	setp.geu.f64	%p11, %fd3, 0d0000000000000000;
	@%p11 bra 	BB0_9;

	cvt.rzi.f64.f64	%fd69, %fd60;
	setp.neu.f64	%p12, %fd69, 0d3FFCAC083126E979;
	mov.f64 	%fd281, 0dFFF8000000000000;
	@%p12 bra 	BB0_28;

BB0_9:
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r52}, %fd4; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r51, hi}, %fd4; 
	}
	// inline asm
	bfe.u32 	%r53, %r52, 20, 11;
	setp.ne.s32	%p13, %r53, 0;
	@%p13 bra 	BB0_11;

	mov.f64 	%fd74, 0d4350000000000000;
	mul.rn.f64 	%fd73, %fd4, %fd74;
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r52}, %fd73; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r51, hi}, %fd73; 
	}
	// inline asm
	bfe.u32 	%r28, %r52, 20, 11;
	add.s32 	%r53, %r28, -54;

BB0_11:
	add.s32 	%r54, %r53, -1023;
	and.b32  	%r31, %r52, -2146435073;
	or.b32  	%r30, %r31, 1072693248;
	// inline asm
	mov.b64 	%fd277, {%r51, %r30};
	// inline asm
	setp.lt.u32	%p14, %r30, 1073127583;
	@%p14 bra 	BB0_13;

	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r32, hi}, %fd277; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r33}, %fd277; 
	}
	// inline asm
	add.s32 	%r35, %r33, -1048576;
	// inline asm
	mov.b64 	%fd277, {%r32, %r35};
	// inline asm
	add.s32 	%r54, %r53, -1022;

BB0_13:
	add.f64 	%fd163, %fd277, 0d3FF0000000000000;
	rcp.rn.f64 	%fd164, %fd163;
	add.f64 	%fd105, %fd277, 0dBFF0000000000000;
	mul.rn.f64 	%fd165, %fd105, %fd164;
	add.f64 	%fd153, %fd165, %fd165;
	mul.rn.f64 	%fd101, %fd153, %fd153;
	mov.f64 	%fd80, 0d3EB0F5FF7D2CAFE2;
	mov.f64 	%fd82, 0d3ED0F5D241AD3B5A;
	// inline asm
	fma.rn.f64 	%fd79, %fd80, %fd101, %fd82;
	// inline asm
	mov.f64 	%fd86, 0d3EF3B20A75488A3F;
	// inline asm
	fma.rn.f64 	%fd83, %fd79, %fd101, %fd86;
	// inline asm
	mov.f64 	%fd90, 0d3F1745CDE4FAECD5;
	// inline asm
	fma.rn.f64 	%fd87, %fd83, %fd101, %fd90;
	// inline asm
	mov.f64 	%fd94, 0d3F3C71C7258A578B;
	// inline asm
	fma.rn.f64 	%fd91, %fd87, %fd101, %fd94;
	// inline asm
	mov.f64 	%fd98, 0d3F6249249242B910;
	// inline asm
	fma.rn.f64 	%fd95, %fd91, %fd101, %fd98;
	// inline asm
	mov.f64 	%fd102, 0d3F89999999999DFB;
	// inline asm
	fma.rn.f64 	%fd99, %fd95, %fd101, %fd102;
	// inline asm
	mul.rn.f64 	%fd166, %fd99, %fd101;
	sub.f64 	%fd167, %fd105, %fd153;
	mul.rn.f64 	%fd106, %fd64, %fd167;
	neg.f64 	%fd104, %fd153;
	// inline asm
	fma.rn.f64 	%fd103, %fd104, %fd105, %fd106;
	// inline asm
	mul.rn.f64 	%fd149, %fd164, %fd103;
	add.f64 	%fd169, %fd166, 0d3FB5555555555555;
	mov.f64 	%fd170, 0d3FB5555555555555;
	sub.f64 	%fd171, %fd170, %fd169;
	add.f64 	%fd172, %fd166, %fd171;
	add.f64 	%fd173, %fd172, 0d0000000000000000;
	add.f64 	%fd174, %fd173, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd116, %fd169, %fd174;
	sub.f64 	%fd175, %fd169, %fd116;
	add.f64 	%fd120, %fd174, %fd175;
	mul.rn.f64 	%fd176, %fd116, %fd153;
	neg.f64 	%fd110, %fd176;
	// inline asm
	fma.rn.f64 	%fd107, %fd116, %fd153, %fd110;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd111, %fd120, %fd149, %fd107;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd115, %fd116, %fd149, %fd111;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd119, %fd120, %fd153, %fd115;
	// inline asm
	add.f64 	%fd132, %fd176, %fd119;
	sub.f64 	%fd177, %fd176, %fd132;
	add.f64 	%fd136, %fd119, %fd177;
	mul.rn.f64 	%fd178, %fd132, %fd153;
	neg.f64 	%fd126, %fd178;
	// inline asm
	fma.rn.f64 	%fd123, %fd132, %fd153, %fd126;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd127, %fd136, %fd149, %fd123;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd131, %fd132, %fd149, %fd127;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd135, %fd136, %fd153, %fd131;
	// inline asm
	add.f64 	%fd148, %fd178, %fd135;
	sub.f64 	%fd179, %fd178, %fd148;
	add.f64 	%fd152, %fd135, %fd179;
	mul.rn.f64 	%fd180, %fd148, %fd153;
	neg.f64 	%fd142, %fd180;
	// inline asm
	fma.rn.f64 	%fd139, %fd148, %fd153, %fd142;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd143, %fd152, %fd149, %fd139;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd147, %fd148, %fd149, %fd143;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd151, %fd152, %fd153, %fd147;
	// inline asm
	add.f64 	%fd181, %fd180, %fd151;
	sub.f64 	%fd182, %fd180, %fd181;
	add.f64 	%fd183, %fd151, %fd182;
	add.f64 	%fd184, %fd153, %fd181;
	sub.f64 	%fd185, %fd153, %fd184;
	add.f64 	%fd186, %fd181, %fd185;
	add.f64 	%fd187, %fd183, %fd186;
	add.f64 	%fd188, %fd149, %fd187;
	add.f64 	%fd189, %fd184, %fd188;
	sub.f64 	%fd190, %fd184, %fd189;
	add.f64 	%fd191, %fd188, %fd190;
	cvt.rn.f64.s32	%fd192, %r54;
	mov.f64 	%fd193, 0d3FE62E42FEFA3000;
	mul.rn.f64 	%fd194, %fd192, %fd193;
	mov.f64 	%fd195, 0d3D53DE6AF278ECE6;
	mul.rn.f64 	%fd196, %fd192, %fd195;
	add.f64 	%fd197, %fd194, %fd189;
	sub.f64 	%fd198, %fd194, %fd197;
	add.f64 	%fd199, %fd189, %fd198;
	add.f64 	%fd200, %fd191, %fd199;
	add.f64 	%fd201, %fd196, %fd200;
	add.f64 	%fd156, %fd197, %fd201;
	sub.f64 	%fd202, %fd197, %fd156;
	add.f64 	%fd160, %fd201, %fd202;
	mul.rn.f64 	%fd203, %fd156, %fd60;
	neg.f64 	%fd158, %fd203;
	// inline asm
	fma.rn.f64 	%fd155, %fd156, %fd60, %fd158;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd159, %fd160, %fd60, %fd155;
	// inline asm
	add.f64 	%fd9, %fd203, %fd159;
	sub.f64 	%fd204, %fd203, %fd9;
	add.f64 	%fd10, %fd159, %fd204;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r14}, %fd9;
	}
	mov.b32 	 %f1, %r14;
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p15, %f2, 0f40874911;
	@%p15 bra 	BB0_15;
	bra.uni 	BB0_14;

BB0_15:
	mov.f64 	%fd208, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd209, %fd9, %fd208;
	mov.f64 	%fd210, 0d4338000000000000;
	add.rn.f64 	%fd211, %fd209, %fd210;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r15, %temp}, %fd211;
	}
	mov.f64 	%fd212, 0dC338000000000000;
	add.rn.f64 	%fd213, %fd211, %fd212;
	mov.f64 	%fd214, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd215, %fd213, %fd214, %fd9;
	mov.f64 	%fd216, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd217, %fd213, %fd216, %fd215;
	mov.f64 	%fd218, 0d3E928AF3FCA213EA;
	mov.f64 	%fd219, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd220, %fd219, %fd217, %fd218;
	mov.f64 	%fd221, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd222, %fd220, %fd217, %fd221;
	mov.f64 	%fd223, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd224, %fd222, %fd217, %fd223;
	mov.f64 	%fd225, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd226, %fd224, %fd217, %fd225;
	mov.f64 	%fd227, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd228, %fd226, %fd217, %fd227;
	mov.f64 	%fd229, 0d3F81111111122322;
	fma.rn.f64 	%fd230, %fd228, %fd217, %fd229;
	mov.f64 	%fd231, 0d3FA55555555502A1;
	fma.rn.f64 	%fd232, %fd230, %fd217, %fd231;
	mov.f64 	%fd233, 0d3FC5555555555511;
	fma.rn.f64 	%fd234, %fd232, %fd217, %fd233;
	mov.f64 	%fd235, 0d3FE000000000000B;
	fma.rn.f64 	%fd236, %fd234, %fd217, %fd235;
	mov.f64 	%fd237, 0d3FF0000000000000;
	fma.rn.f64 	%fd238, %fd236, %fd217, %fd237;
	fma.rn.f64 	%fd278, %fd238, %fd217, %fd237;
	abs.s32 	%r36, %r15;
	setp.lt.s32	%p18, %r36, 1023;
	@%p18 bra 	BB0_17;
	bra.uni 	BB0_16;

BB0_17:
	shl.b32 	%r42, %r15, 20;
	add.s32 	%r55, %r42, 1072693248;
	bra.uni 	BB0_18;

BB0_14:
	setp.lt.s32	%p16, %r14, 0;
	selp.f64	%fd205, 0d0000000000000000, 0d7FF0000000000000, %p16;
	abs.f64 	%fd206, %fd9;
	setp.gtu.f64	%p17, %fd206, 0d7FF0000000000000;
	add.f64 	%fd207, %fd9, %fd9;
	selp.f64	%fd281, %fd207, %fd205, %p17;
	bra.uni 	BB0_19;

BB0_16:
	add.s32 	%r37, %r15, 2046;
	shl.b32 	%r38, %r37, 19;
	and.b32  	%r39, %r38, -1048576;
	shl.b32 	%r40, %r37, 20;
	sub.s32 	%r55, %r40, %r39;
	mov.u32 	%r41, 0;
	mov.b64 	%fd239, {%r41, %r39};
	mul.f64 	%fd278, %fd278, %fd239;

BB0_18:
	mov.u32 	%r43, 0;
	mov.b64 	%fd240, {%r43, %r55};
	mul.f64 	%fd281, %fd278, %fd240;

BB0_19:
	abs.f64 	%fd241, %fd281;
	setp.eq.f64	%p19, %fd241, 0d7FF0000000000000;
	@%p19 bra 	BB0_21;

	// inline asm
	fma.rn.f64 	%fd281, %fd281, %fd10, %fd281;
	// inline asm

BB0_21:
	setp.neu.f64	%p20, %fd5, 0d3FF0000000000000;
	or.pred  	%p22, %p11, %p20;
	@%p22 bra 	BB0_28;

	mov.b64 	 %rd15, %fd281;
	xor.b64  	%rd16, %rd15, -9223372036854775808;
	mov.b64 	 %fd281, %rd16;

BB0_28:
	mov.b32	%r50, %envreg3;
	mov.u32 	%r49, %ntid.x;
	mov.u32 	%r48, %ctaid.x;
	mov.u32 	%r47, %tid.x;
	mad.lo.s32 	%r46, %r48, %r49, %r50;
	add.s32 	%r45, %r46, %r47;
	ld.param.u64 	%rd26, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_5];
	mul.wide.s32 	%rd19, %r45, 8;
	add.s64 	%rd1, %rd26, %rd19;
	mov.f64 	%fd282, 0d7FFFFFFFE0000000;
	@%p2 bra 	BB0_30;

	ld.global.f64 	%fd282, [%rd1];

BB0_30:
	abs.f64 	%fd249, %fd282;
	setp.gtu.f64	%p27, %fd249, 0d7FF0000000000000;
	mov.f64 	%fd291, 0d0000000000000000;
	@%p27 bra 	BB0_57;

	mov.f64 	%fd284, 0d7FFFFFFFE0000000;
	mov.f64 	%fd283, %fd284;
	@%p2 bra 	BB0_33;

	ld.global.f64 	%fd283, [%rd1];

BB0_33:
	ld.param.u64 	%rd27, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_4];
	add.s64 	%rd2, %rd27, %rd19;
	@%p2 bra 	BB0_35;

	ld.global.f64 	%fd284, [%rd2];

BB0_35:
	abs.f64 	%fd253, %fd284;
	setp.gtu.f64	%p30, %fd253, 0d7FF0000000000000;
	mov.f64 	%fd252, 0dFFF8000000000000;
	@%p30 bra 	BB0_36;
	bra.uni 	BB0_37;

BB0_36:
	mov.f64 	%fd290, %fd252;
	bra.uni 	BB0_56;

BB0_37:
	mov.f64 	%fd286, 0d7FFFFFFFE0000000;
	mov.f64 	%fd33, %fd286;
	@%p2 bra 	BB0_39;

	ld.global.f64 	%fd33, [%rd2];

BB0_39:
	ld.param.u64 	%rd28, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_3];
	add.s64 	%rd3, %rd28, %rd19;
	@%p2 bra 	BB0_41;

	ld.global.f64 	%fd286, [%rd3];

BB0_41:
	abs.f64 	%fd256, %fd286;
	setp.le.f64	%p33, %fd256, 0d7FF0000000000000;
	@%p33 bra 	BB0_47;

	mov.f64 	%fd287, 0d7FFFFFFFE0000000;
	@%p2 bra 	BB0_44;

	ld.global.f64 	%fd287, [%rd2];

BB0_44:
	abs.f64 	%fd258, %fd287;
	setp.gtu.f64	%p35, %fd258, 0d7FF0000000000000;
	@%p35 bra 	BB0_47;

	mov.f64 	%fd290, 0d0000000000000000;
	@%p2 bra 	BB0_56;

	ld.global.f64 	%fd261, [%rd2];
	setp.neu.f64	%p37, %fd261, 0d0000000000000000;
	@%p37 bra 	BB0_56;

BB0_47:
	mov.f64 	%fd288, 0d7FFFFFFFE0000000;
	@%p2 bra 	BB0_49;

	ld.global.f64 	%fd288, [%rd3];

BB0_49:
	abs.f64 	%fd263, %fd288;
	setp.gtu.f64	%p39, %fd263, 0d7FF0000000000000;
	@%p39 bra 	BB0_54;
	bra.uni 	BB0_50;

BB0_54:
	setp.eq.f64	%p42, %fd33, 0d0000000000000000;
	mov.f64 	%fd290, %fd252;
	@%p42 bra 	BB0_56;

	rcp.rn.f64 	%fd290, %fd33;
	bra.uni 	BB0_56;

BB0_50:
	setp.eq.f64	%p40, %fd33, 0d0000000000000000;
	mov.f64 	%fd290, %fd252;
	@%p40 bra 	BB0_56;

	mov.f64 	%fd289, 0d7FFFFFFFE0000000;
	@%p2 bra 	BB0_53;

	ld.global.f64 	%fd289, [%rd3];

BB0_53:
	div.rn.f64 	%fd290, %fd289, %fd33;

BB0_56:
	mul.f64 	%fd291, %fd283, %fd290;

BB0_57:
	ld.param.u64 	%rd29, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_2];
	add.s64 	%rd4, %rd29, %rd19;
	mov.f64 	%fd292, 0d7FFFFFFFE0000000;
	@%p2 bra 	BB0_59;

	ld.global.f64 	%fd292, [%rd4];

BB0_59:
	abs.f64 	%fd268, %fd292;
	setp.gtu.f64	%p44, %fd268, 0d7FF0000000000000;
	or.pred  	%p45, %p44, %p2;
	selp.f64	%fd293, 0d0000000000000000, 0d7FFFFFFFE0000000, %p44;
	@%p45 bra 	BB0_61;

	ld.global.f64 	%fd269, [%rd4];
	add.f64 	%fd293, %fd269, 0d0000000000000000;

BB0_61:
	ld.param.u64 	%rd30, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_1];
	add.s64 	%rd5, %rd30, %rd19;
	mov.f64 	%fd294, 0d7FFFFFFFE0000000;
	@%p2 bra 	BB0_63;

	ld.global.f64 	%fd294, [%rd5];

BB0_63:
	abs.f64 	%fd271, %fd294;
	setp.gtu.f64	%p47, %fd271, 0d7FF0000000000000;
	or.pred  	%p48, %p47, %p2;
	selp.f64	%fd295, 0d0000000000000000, 0d7FFFFFFFE0000000, %p47;
	@%p48 bra 	BB0_65;

	ld.global.f64 	%fd295, [%rd5];

BB0_65:
	ld.param.u64 	%rd31, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_0];
	add.f64 	%fd272, %fd293, %fd295;
	sub.f64 	%fd273, %fd272, %fd291;
	add.f64 	%fd274, %fd281, 0d0000000000000000;
	add.f64 	%fd275, %fd274, %fd273;
	add.s64 	%rd25, %rd31, %rd19;
	st.global.f64 	[%rd25], %fd275;
	ret;
}


  