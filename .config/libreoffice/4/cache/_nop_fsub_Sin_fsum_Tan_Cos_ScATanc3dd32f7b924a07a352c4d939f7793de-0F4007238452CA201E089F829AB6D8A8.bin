//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25773113
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_75, texmode_independent
.address_size 64

	// .globl	DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan
.const .align 8 .b8 __internal_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.entry DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan(
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_0,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_1,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_2,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_3
)
{
	.local .align 8 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<67>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<120>;
	.reg .f64 	%fd<504>;
	.reg .b64 	%rd<134>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd48, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_1];
	ld.param.u64 	%rd49, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_2];
	ld.param.u64 	%rd50, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_3];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r39, %ctaid.x;
	mov.u32 	%r40, %ntid.x;
	mov.b32	%r41, %envreg3;
	mad.lo.s32 	%r42, %r39, %r40, %r41;
	mov.u32 	%r43, %tid.x;
	add.s32 	%r1, %r42, %r43;
	cvt.s64.s32	%rd2, %r1;
	mul.wide.s32 	%rd52, %r1, 8;
	add.s64 	%rd3, %rd50, %rd52;
	mov.f64 	%fd481, 0d7FFFFFFFE0000000;
	setp.gt.s32	%p1, %r1, 4;
	mov.f64 	%fd480, %fd481;
	@%p1 bra 	BB0_2;

	ld.global.f64 	%fd480, [%rd3];

BB0_2:
	@%p1 bra 	BB0_4;

	ld.global.f64 	%fd481, [%rd3];

BB0_4:
	abs.f64 	%fd82, %fd481;
	setp.gtu.f64	%p3, %fd82, 0d7FF0000000000000;
	cvt.u32.u64	%r2, %rd2;
	setp.gt.s32	%p4, %r2, 4;
	or.pred  	%p5, %p3, %p4;
	selp.f64	%fd5, 0d0000000000000000, %fd480, %p5;
	abs.f64 	%fd6, %fd5;
	setp.leu.f64	%p6, %fd6, 0d3FF0000000000000;
	mov.f64 	%fd482, %fd6;
	@%p6 bra 	BB0_6;

	// inline asm
	rcp.approx.ftz.f64 %fd83,%fd6;
	// inline asm
	neg.f64 	%fd85, %fd6;
	mov.f64 	%fd86, 0d3FF0000000000000;
	fma.rn.f64 	%fd87, %fd85, %fd83, %fd86;
	fma.rn.f64 	%fd88, %fd87, %fd87, %fd87;
	fma.rn.f64 	%fd89, %fd88, %fd83, %fd83;
	setp.eq.f64	%p7, %fd6, 0d7FF0000000000000;
	selp.f64	%fd482, 0d0000000000000000, %fd89, %p7;

BB0_6:
	mul.f64 	%fd91, %fd482, %fd482;
	mov.f64 	%fd92, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd93, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd94, %fd93, %fd91, %fd92;
	mov.f64 	%fd95, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd96, %fd94, %fd91, %fd95;
	mov.f64 	%fd97, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd98, %fd96, %fd91, %fd97;
	mov.f64 	%fd99, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd100, %fd98, %fd91, %fd99;
	mov.f64 	%fd101, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd102, %fd100, %fd91, %fd101;
	mov.f64 	%fd103, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd104, %fd102, %fd91, %fd103;
	mov.f64 	%fd105, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd106, %fd104, %fd91, %fd105;
	mov.f64 	%fd107, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd108, %fd106, %fd91, %fd107;
	mov.f64 	%fd109, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd110, %fd108, %fd91, %fd109;
	mov.f64 	%fd111, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd112, %fd110, %fd91, %fd111;
	mov.f64 	%fd113, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd114, %fd112, %fd91, %fd113;
	mov.f64 	%fd115, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd116, %fd114, %fd91, %fd115;
	mov.f64 	%fd117, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd118, %fd116, %fd91, %fd117;
	mov.f64 	%fd119, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd120, %fd118, %fd91, %fd119;
	mov.f64 	%fd121, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd122, %fd120, %fd91, %fd121;
	mov.f64 	%fd123, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd124, %fd122, %fd91, %fd123;
	mov.f64 	%fd125, 0d3FC99999999840D2;
	fma.rn.f64 	%fd126, %fd124, %fd91, %fd125;
	mov.f64 	%fd127, 0dBFD555555555544C;
	fma.rn.f64 	%fd128, %fd126, %fd91, %fd127;
	mul.f64 	%fd129, %fd91, %fd128;
	fma.rn.f64 	%fd130, %fd129, %fd482, %fd482;
	mov.f64 	%fd131, 0d3FF921FB54442D18;
	sub.f64 	%fd132, %fd131, %fd130;
	setp.gt.f64	%p8, %fd6, 0d3FF0000000000000;
	selp.f64	%fd133, %fd132, %fd130, %p8;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r44, %temp}, %fd133;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd133;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r46}, %fd5;
	}
	and.b32  	%r47, %r46, -2147483648;
	or.b32  	%r48, %r45, %r47;
	mov.b64 	%fd9, {%r44, %r48};
	add.s64 	%rd4, %rd49, %rd52;
	mov.f64 	%fd484, 0d7FFFFFFFE0000000;
	mov.f64 	%fd483, %fd484;
	@%p1 bra 	BB0_8;

	ld.global.f64 	%fd483, [%rd4];

BB0_8:
	@%p1 bra 	BB0_10;

	ld.global.f64 	%fd484, [%rd4];

BB0_10:
	abs.f64 	%fd136, %fd484;
	setp.gtu.f64	%p11, %fd136, 0d7FF0000000000000;
	or.pred  	%p13, %p11, %p4;
	selp.f64	%fd14, 0d0000000000000000, %fd483, %p13;
	abs.f64 	%fd15, %fd14;
	setp.eq.f64	%p14, %fd15, 0d7FF0000000000000;
	mov.f64 	%fd487, 0dFFF8000000000000;
	@%p14 bra 	BB0_30;

	setp.gt.f64	%p15, %fd15, 0d41E0000000000000;
	@%p15 bra 	BB0_13;
	bra.uni 	BB0_12;

BB0_13:
	mov.b64 	 %rd5, %fd14;
	and.b64  	%rd6, %rd5, -9223372036854775808;
	shr.u64 	%rd7, %rd5, 52;
	bfe.u64 	%rd55, %rd5, 52, 11;
	add.s64 	%rd56, %rd55, 4294966272;
	cvt.u32.u64	%r4, %rd56;
	shr.u32 	%r50, %r4, 6;
	mov.u32 	%r51, 15;
	sub.s32 	%r5, %r51, %r50;
	mov.u32 	%r52, 19;
	sub.s32 	%r53, %r52, %r50;
	mov.u32 	%r54, 18;
	min.s32 	%r6, %r54, %r53;
	mov.u64 	%rd123, 0;
	setp.ge.s32	%p16, %r5, %r6;
	mov.u64 	%rd122, %rd1;
	@%p16 bra 	BB0_16;

	shl.b64 	%rd58, %rd5, 11;
	or.b64  	%rd9, %rd58, -9223372036854775808;
	cvt.u32.u64	%r55, %rd7;
	and.b32  	%r56, %r55, 2047;
	add.s32 	%r57, %r56, -1024;
	shr.u32 	%r58, %r57, 6;
	neg.s32 	%r59, %r58;
	mul.wide.s32 	%rd60, %r59, 8;
	mov.u64 	%rd61, __internal_i2opi_d;
	add.s64 	%rd62, %rd60, %rd61;
	add.s64 	%rd119, %rd62, 120;
	mov.u64 	%rd123, 0;
	mov.u64 	%rd122, %rd1;
	mov.u32 	%r110, %r5;

BB0_15:
	.pragma "nounroll";
	ld.const.u64 	%rd63, [%rd119];
	mul.lo.s64 	%rd64, %rd63, %rd9;
	mul.hi.u64 	%rd65, %rd63, %rd9;
	add.s64 	%rd66, %rd123, %rd64;
	setp.lt.u64	%p17, %rd66, %rd123;
	selp.u64	%rd67, 1, 0, %p17;
	add.s64 	%rd123, %rd67, %rd65;
	st.local.u64 	[%rd122], %rd66;
	add.s32 	%r110, %r110, 1;
	sub.s32 	%r60, %r110, %r5;
	mul.wide.s32 	%rd68, %r60, 8;
	add.s64 	%rd122, %rd1, %rd68;
	add.s64 	%rd119, %rd119, 8;
	setp.lt.s32	%p18, %r110, %r6;
	@%p18 bra 	BB0_15;

BB0_16:
	st.local.u64 	[%rd122], %rd123;
	ld.local.u64 	%rd124, [%rd1+24];
	ld.local.u64 	%rd125, [%rd1+16];
	and.b32  	%r61, %r4, 63;
	setp.eq.s32	%p19, %r61, 0;
	@%p19 bra 	BB0_18;

	cvt.u32.u64	%r62, %rd7;
	and.b32  	%r63, %r62, 63;
	shl.b64 	%rd69, %rd124, %r63;
	neg.s64 	%rd70, %rd7;
	cvt.u32.u64	%r64, %rd70;
	and.b32  	%r65, %r64, 63;
	shr.u64 	%rd71, %rd125, %r65;
	or.b64  	%rd124, %rd71, %rd69;
	shl.b64 	%rd72, %rd125, %r63;
	ld.local.u64 	%rd73, [%rd1+8];
	shr.u64 	%rd74, %rd73, %r65;
	or.b64  	%rd125, %rd74, %rd72;

BB0_18:
	shr.u64 	%rd75, %rd124, 62;
	cvt.u32.u64	%r66, %rd75;
	shr.u64 	%rd76, %rd125, 62;
	shl.b64 	%rd77, %rd124, 2;
	or.b64  	%rd131, %rd76, %rd77;
	shl.b64 	%rd28, %rd125, 2;
	setp.ne.s64	%p20, %rd28, 0;
	selp.u64	%rd78, 1, 0, %p20;
	or.b64  	%rd79, %rd78, %rd131;
	setp.gt.u64	%p21, %rd79, -9223372036854775808;
	selp.u32	%r67, 1, 0, %p21;
	add.s32 	%r9, %r67, %r66;
	setp.lt.u64	%p22, %rd79, -9223372036854775807;
	@%p22 bra 	BB0_19;

	not.b64 	%rd80, %rd131;
	neg.s64 	%rd128, %rd28;
	setp.eq.s64	%p23, %rd28, 0;
	selp.u64	%rd81, 1, 0, %p23;
	add.s64 	%rd131, %rd81, %rd80;
	xor.b64  	%rd127, %rd6, -9223372036854775808;
	bra.uni 	BB0_21;

BB0_12:
	mov.f64 	%fd150, 0d3FE45F306DC9C883;
	mul.rn.f64 	%fd137, %fd14, %fd150;
	// inline asm
	cvt.rni.s32.f64 	%r114, %fd137;
	// inline asm
	cvt.rn.f64.s32	%fd151, %r114;
	neg.f64 	%fd147, %fd151;
	// inline asm
	fma.rn.f64 	%fd138, %fd147, %fd131, %fd14;
	// inline asm
	mov.f64 	%fd144, 0d3C91A62633145C00;
	// inline asm
	fma.rn.f64 	%fd142, %fd147, %fd144, %fd138;
	// inline asm
	mov.f64 	%fd148, 0d397B839A252049C0;
	// inline asm
	fma.rn.f64 	%fd485, %fd147, %fd148, %fd142;
	// inline asm
	bra.uni 	BB0_26;

BB0_19:
	mov.u64 	%rd127, %rd6;
	mov.u64 	%rd128, %rd28;

BB0_21:
	setp.eq.s64	%p24, %rd6, 0;
	neg.s32 	%r70, %r9;
	mov.u32 	%r112, 0;
	selp.b32	%r114, %r9, %r70, %p24;
	setp.lt.s64	%p25, %rd131, 1;
	@%p25 bra 	BB0_23;

BB0_22:
	shr.u64 	%rd82, %rd128, 63;
	shl.b64 	%rd83, %rd131, 1;
	or.b64  	%rd131, %rd82, %rd83;
	shl.b64 	%rd128, %rd128, 1;
	add.s32 	%r112, %r112, -1;
	setp.gt.s64	%p26, %rd131, 0;
	@%p26 bra 	BB0_22;

BB0_23:
	mul.lo.s64 	%rd133, %rd131, -3958705157555305931;
	mov.u64 	%rd84, -3958705157555305931;
	mul.hi.u64 	%rd132, %rd131, %rd84;
	setp.lt.s64	%p27, %rd132, 1;
	@%p27 bra 	BB0_25;

	shl.b64 	%rd85, %rd132, 1;
	shr.u64 	%rd86, %rd133, 63;
	or.b64  	%rd132, %rd85, %rd86;
	mul.lo.s64 	%rd133, %rd131, -7917410315110611862;
	add.s32 	%r112, %r112, -1;

BB0_25:
	setp.ne.s64	%p28, %rd133, 0;
	selp.u64	%rd87, 1, 0, %p28;
	add.s64 	%rd88, %rd87, %rd132;
	add.s32 	%r71, %r112, 1022;
	cvt.u64.u32	%rd89, %r71;
	shl.b64 	%rd90, %rd89, 52;
	shr.u64 	%rd91, %rd88, 11;
	add.s64 	%rd92, %rd90, %rd91;
	bfe.u64 	%rd93, %rd88, 10, 1;
	add.s64 	%rd94, %rd92, %rd93;
	or.b64  	%rd95, %rd94, %rd127;
	mov.b64 	 %fd485, %rd95;

BB0_26:
	add.s32 	%r17, %r114, 1;
	and.b32  	%r72, %r17, 1;
	setp.eq.b32	%p29, %r72, 1;
	mul.rn.f64 	%fd19, %fd485, %fd485;
	@!%p29 bra 	BB0_28;
	bra.uni 	BB0_27;

BB0_27:
	mov.f64 	%fd153, 0dBDA8FF8D5A8F03DB;
	mov.f64 	%fd155, 0d3E21EEA7D67FAD92;
	// inline asm
	fma.rn.f64 	%fd152, %fd153, %fd19, %fd155;
	// inline asm
	mov.f64 	%fd159, 0dBE927E4F8E26B8E3;
	// inline asm
	fma.rn.f64 	%fd156, %fd152, %fd19, %fd159;
	// inline asm
	mov.f64 	%fd163, 0d3EFA01A019DDEC33;
	// inline asm
	fma.rn.f64 	%fd160, %fd156, %fd19, %fd163;
	// inline asm
	mov.f64 	%fd167, 0dBF56C16C16C15D69;
	// inline asm
	fma.rn.f64 	%fd164, %fd160, %fd19, %fd167;
	// inline asm
	mov.f64 	%fd171, 0d3FA5555555555551;
	// inline asm
	fma.rn.f64 	%fd168, %fd164, %fd19, %fd171;
	// inline asm
	mov.f64 	%fd175, 0dBFE0000000000000;
	// inline asm
	fma.rn.f64 	%fd172, %fd168, %fd19, %fd175;
	// inline asm
	mov.f64 	%fd179, 0d3FF0000000000000;
	// inline asm
	fma.rn.f64 	%fd486, %fd172, %fd19, %fd179;
	// inline asm
	bra.uni 	BB0_29;

BB0_28:
	mov.f64 	%fd181, 0d3DE5D8FD1FCF0EC1;
	mov.f64 	%fd183, 0dBE5AE5E5A9291691;
	// inline asm
	fma.rn.f64 	%fd180, %fd181, %fd19, %fd183;
	// inline asm
	mov.f64 	%fd187, 0d3EC71DE3567D4896;
	// inline asm
	fma.rn.f64 	%fd184, %fd180, %fd19, %fd187;
	// inline asm
	mov.f64 	%fd191, 0dBF2A01A019BFDF03;
	// inline asm
	fma.rn.f64 	%fd188, %fd184, %fd19, %fd191;
	// inline asm
	mov.f64 	%fd195, 0d3F8111111110F7D0;
	// inline asm
	fma.rn.f64 	%fd192, %fd188, %fd19, %fd195;
	// inline asm
	mov.f64 	%fd199, 0dBFC5555555555548;
	// inline asm
	fma.rn.f64 	%fd196, %fd192, %fd19, %fd199;
	// inline asm
	mul.rn.f64 	%fd201, %fd196, %fd19;
	// inline asm
	fma.rn.f64 	%fd486, %fd201, %fd485, %fd485;
	// inline asm

BB0_29:
	and.b32  	%r73, %r17, 2;
	setp.eq.s32	%p30, %r73, 0;
	neg.f64 	%fd204, %fd486;
	selp.f64	%fd205, %fd486, %fd204, %p30;
	add.f64 	%fd487, %fd205, 0d0000000000000000;

BB0_30:
	add.s64 	%rd46, %rd48, %rd52;
	mov.f64 	%fd489, 0d7FFFFFFFE0000000;
	mov.f64 	%fd488, %fd489;
	@%p1 bra 	BB0_32;

	ld.global.f64 	%fd207, [%rd46];
	mul.f64 	%fd488, %fd207, 0d3FD45F306DC9C883;

BB0_32:
	@%p1 bra 	BB0_34;

	ld.global.f64 	%fd489, [%rd46];

BB0_34:
	abs.f64 	%fd209, %fd489;
	setp.gtu.f64	%p33, %fd209, 0d7FF0000000000000;
	or.pred  	%p35, %p33, %p4;
	selp.f64	%fd493, 0d0000000000000000, %fd488, %p35;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r74, %temp}, %fd493;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r18}, %fd493;
	}
	add.s32 	%r75, %r18, 1048576;
	mov.b64 	%fd210, {%r74, %r75};
	cvt.rni.f64.f64	%fd211, %fd210;
	cvt.rzi.s64.f64	%rd97, %fd211;
	cvt.u32.u64	%r19, %rd97;
	neg.f64 	%fd212, %fd211;
	mov.f64 	%fd213, 0d3FE0000000000000;
	fma.rn.f64 	%fd214, %fd212, %fd213, %fd493;
	mul.f64 	%fd215, %fd214, 0d3CA1A62633145C07;
	mov.f64 	%fd216, 0d400921FB54442D18;
	fma.rn.f64 	%fd217, %fd214, %fd216, %fd215;
	and.b64  	%rd98, %rd97, 1;
	mul.rn.f64 	%fd30, %fd217, %fd217;
	setp.eq.b64	%p36, %rd98, 1;
	not.pred 	%p37, %p36;
	selp.f64	%fd218, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p37;
	shl.b64 	%rd99, %rd98, 6;
	mov.u64 	%rd100, __cudart_sin_cos_coeffs;
	add.s64 	%rd101, %rd99, %rd100;
	ld.const.f64 	%fd219, [%rd101+8];
	fma.rn.f64 	%fd220, %fd218, %fd30, %fd219;
	ld.const.f64 	%fd221, [%rd101+16];
	fma.rn.f64 	%fd222, %fd220, %fd30, %fd221;
	ld.const.f64 	%fd223, [%rd101+24];
	fma.rn.f64 	%fd224, %fd222, %fd30, %fd223;
	ld.const.f64 	%fd225, [%rd101+32];
	fma.rn.f64 	%fd226, %fd224, %fd30, %fd225;
	ld.const.f64 	%fd227, [%rd101+40];
	fma.rn.f64 	%fd228, %fd226, %fd30, %fd227;
	ld.const.f64 	%fd229, [%rd101+48];
	fma.rn.f64 	%fd31, %fd228, %fd30, %fd229;
	fma.rn.f64 	%fd492, %fd31, %fd217, %fd217;
	@%p37 bra 	BB0_36;

	mov.f64 	%fd230, 0d3FF0000000000000;
	fma.rn.f64 	%fd492, %fd31, %fd30, %fd230;

BB0_36:
	and.b32  	%r76, %r19, 2;
	setp.eq.s32	%p38, %r76, 0;
	@%p38 bra 	BB0_38;

	mov.f64 	%fd231, 0d0000000000000000;
	mov.f64 	%fd232, 0dBFF0000000000000;
	fma.rn.f64 	%fd492, %fd492, %fd232, %fd231;

BB0_38:
	cvt.rzi.f64.f64	%fd233, %fd493;
	setp.neu.f64	%p39, %fd233, %fd493;
	@%p39 bra 	BB0_40;

	mov.f64 	%fd234, 0d0000000000000000;
	mul.rn.f64 	%fd492, %fd493, %fd234;

BB0_40:
	add.s32 	%r77, %r18, %r18;
	setp.lt.u32	%p40, %r77, -2038431743;
	@%p40 bra 	BB0_42;

	mov.f64 	%fd235, 0d0000000000000000;
	mul.rn.f64 	%fd493, %fd493, %fd235;

BB0_42:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r78}, %fd493;
	}
	add.s32 	%r79, %r78, 1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r80, %temp}, %fd493;
	}
	mov.b64 	%fd236, {%r80, %r79};
	cvt.rni.f64.f64	%fd237, %fd236;
	cvt.rzi.s64.f64	%rd102, %fd237;
	cvt.u32.u64	%r81, %rd102;
	neg.f64 	%fd238, %fd237;
	fma.rn.f64 	%fd240, %fd238, %fd213, %fd493;
	mul.f64 	%fd241, %fd240, 0d3CA1A62633145C07;
	fma.rn.f64 	%fd243, %fd240, %fd216, %fd241;
	add.s32 	%r20, %r81, 1;
	and.b32  	%r82, %r20, 1;
	shl.b32 	%r83, %r82, 3;
	mul.rn.f64 	%fd41, %fd243, %fd243;
	setp.eq.s32	%p41, %r82, 0;
	selp.f64	%fd244, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p41;
	mul.wide.u32 	%rd103, %r83, 8;
	add.s64 	%rd105, %rd103, %rd100;
	ld.const.f64 	%fd245, [%rd105+8];
	fma.rn.f64 	%fd246, %fd244, %fd41, %fd245;
	ld.const.f64 	%fd247, [%rd105+16];
	fma.rn.f64 	%fd248, %fd246, %fd41, %fd247;
	ld.const.f64 	%fd249, [%rd105+24];
	fma.rn.f64 	%fd250, %fd248, %fd41, %fd249;
	ld.const.f64 	%fd251, [%rd105+32];
	fma.rn.f64 	%fd252, %fd250, %fd41, %fd251;
	ld.const.f64 	%fd253, [%rd105+40];
	fma.rn.f64 	%fd254, %fd252, %fd41, %fd253;
	ld.const.f64 	%fd255, [%rd105+48];
	fma.rn.f64 	%fd42, %fd254, %fd41, %fd255;
	fma.rn.f64 	%fd47, %fd42, %fd243, %fd243;
	@%p41 bra 	BB0_44;

	mov.f64 	%fd256, 0d3FF0000000000000;
	fma.rn.f64 	%fd47, %fd42, %fd41, %fd256;

BB0_44:
	and.b32  	%r84, %r20, 2;
	setp.eq.s32	%p42, %r84, 0;
	@%p42 bra 	BB0_46;

	mov.f64 	%fd257, 0d0000000000000000;
	mov.f64 	%fd258, 0dBFF0000000000000;
	fma.rn.f64 	%fd47, %fd47, %fd258, %fd257;

BB0_46:
	setp.eq.f64	%p43, %fd47, 0d3FF0000000000000;
	mov.f64 	%fd500, 0d3FF0000000000000;
	@%p43 bra 	BB0_72;

	abs.f64 	%fd48, %fd47;
	setp.gtu.f64	%p44, %fd48, 0d7FF0000000000000;
	@%p44 bra 	BB0_71;
	bra.uni 	BB0_48;

BB0_71:
	add.f64 	%fd500, %fd47, 0dBFF0000000000000;
	bra.uni 	BB0_72;

BB0_48:
	setp.eq.f64	%p45, %fd47, 0d7FF0000000000000;
	@%p45 bra 	BB0_70;
	bra.uni 	BB0_49;

BB0_70:
	mov.f64 	%fd450, 0dBFF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r105}, %fd450;
	}
	setp.gt.s32	%p62, %r105, -1;
	selp.f64	%fd500, 0d7FF0000000000000, 0d0000000000000000, %p62;
	bra.uni 	BB0_72;

BB0_49:
	mov.f64 	%fd260, 0dBFF0000000000000;
	mul.rn.f64 	%fd262, %fd213, %fd260;
	cvt.rzi.f64.f64	%fd263, %fd262;
	mov.f64 	%fd264, 0d4000000000000000;
	mul.rn.f64 	%fd265, %fd264, %fd263;
	sub.f64 	%fd266, %fd260, %fd265;
	abs.f64 	%fd49, %fd266;
	setp.eq.f64	%p46, %fd47, 0d0000000000000000;
	@%p46 bra 	BB0_69;
	bra.uni 	BB0_50;

BB0_69:
	setp.eq.f64	%p61, %fd49, 0d3FF0000000000000;
	rcp.rn.f64 	%fd447, %fd47;
	mov.f64 	%fd448, 0d0000000000000000;
	rcp.rn.f64 	%fd449, %fd448;
	selp.f64	%fd500, %fd447, %fd449, %p61;
	bra.uni 	BB0_72;

BB0_50:
	setp.eq.f64	%p47, %fd47, 0dFFF0000000000000;
	@%p47 bra 	BB0_67;
	bra.uni 	BB0_51;

BB0_67:
	div.rn.f64 	%fd500, %fd260, %fd47;
	setp.neu.f64	%p60, %fd49, 0d3FF0000000000000;
	@%p60 bra 	BB0_72;

	mov.b64 	 %rd108, %fd500;
	xor.b64  	%rd109, %rd108, -9223372036854775808;
	mov.b64 	 %fd500, %rd109;
	bra.uni 	BB0_72;

BB0_51:
	setp.geu.f64	%p48, %fd47, 0d0000000000000000;
	@%p48 bra 	BB0_53;

	cvt.rzi.f64.f64	%fd269, %fd260;
	setp.neu.f64	%p49, %fd269, 0dBFF0000000000000;
	mov.f64 	%fd500, 0dFFF8000000000000;
	@%p49 bra 	BB0_72;

BB0_53:
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r116}, %fd48; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r115, hi}, %fd48; 
	}
	// inline asm
	bfe.u32 	%r117, %r116, 20, 11;
	setp.ne.s32	%p50, %r117, 0;
	@%p50 bra 	BB0_55;

	mov.f64 	%fd274, 0d4350000000000000;
	mul.rn.f64 	%fd273, %fd48, %fd274;
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r116}, %fd273; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r115, hi}, %fd273; 
	}
	// inline asm
	bfe.u32 	%r89, %r116, 20, 11;
	add.s32 	%r117, %r89, -54;

BB0_55:
	add.s32 	%r118, %r117, -1023;
	and.b32  	%r92, %r116, -2146435073;
	or.b32  	%r91, %r92, 1072693248;
	// inline asm
	mov.b64 	%fd496, {%r115, %r91};
	// inline asm
	setp.lt.u32	%p51, %r91, 1073127583;
	@%p51 bra 	BB0_57;

	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r93, hi}, %fd496; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r94}, %fd496; 
	}
	// inline asm
	add.s32 	%r96, %r94, -1048576;
	// inline asm
	mov.b64 	%fd496, {%r93, %r96};
	// inline asm
	add.s32 	%r118, %r117, -1022;

BB0_57:
	add.f64 	%fd363, %fd496, 0d3FF0000000000000;
	rcp.rn.f64 	%fd364, %fd363;
	add.f64 	%fd305, %fd496, 0dBFF0000000000000;
	mul.rn.f64 	%fd365, %fd305, %fd364;
	add.f64 	%fd353, %fd365, %fd365;
	mul.rn.f64 	%fd301, %fd353, %fd353;
	mov.f64 	%fd280, 0d3EB0F5FF7D2CAFE2;
	mov.f64 	%fd282, 0d3ED0F5D241AD3B5A;
	// inline asm
	fma.rn.f64 	%fd279, %fd280, %fd301, %fd282;
	// inline asm
	mov.f64 	%fd286, 0d3EF3B20A75488A3F;
	// inline asm
	fma.rn.f64 	%fd283, %fd279, %fd301, %fd286;
	// inline asm
	mov.f64 	%fd290, 0d3F1745CDE4FAECD5;
	// inline asm
	fma.rn.f64 	%fd287, %fd283, %fd301, %fd290;
	// inline asm
	mov.f64 	%fd294, 0d3F3C71C7258A578B;
	// inline asm
	fma.rn.f64 	%fd291, %fd287, %fd301, %fd294;
	// inline asm
	mov.f64 	%fd298, 0d3F6249249242B910;
	// inline asm
	fma.rn.f64 	%fd295, %fd291, %fd301, %fd298;
	// inline asm
	mov.f64 	%fd302, 0d3F89999999999DFB;
	// inline asm
	fma.rn.f64 	%fd299, %fd295, %fd301, %fd302;
	// inline asm
	mul.rn.f64 	%fd366, %fd299, %fd301;
	sub.f64 	%fd367, %fd305, %fd353;
	mul.rn.f64 	%fd306, %fd264, %fd367;
	neg.f64 	%fd304, %fd353;
	// inline asm
	fma.rn.f64 	%fd303, %fd304, %fd305, %fd306;
	// inline asm
	mul.rn.f64 	%fd349, %fd364, %fd303;
	add.f64 	%fd369, %fd366, 0d3FB5555555555555;
	mov.f64 	%fd370, 0d3FB5555555555555;
	sub.f64 	%fd371, %fd370, %fd369;
	add.f64 	%fd372, %fd366, %fd371;
	add.f64 	%fd373, %fd372, 0d0000000000000000;
	add.f64 	%fd374, %fd373, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd316, %fd369, %fd374;
	sub.f64 	%fd375, %fd369, %fd316;
	add.f64 	%fd320, %fd374, %fd375;
	mul.rn.f64 	%fd376, %fd316, %fd353;
	neg.f64 	%fd310, %fd376;
	// inline asm
	fma.rn.f64 	%fd307, %fd316, %fd353, %fd310;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd311, %fd320, %fd349, %fd307;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd315, %fd316, %fd349, %fd311;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd319, %fd320, %fd353, %fd315;
	// inline asm
	add.f64 	%fd332, %fd376, %fd319;
	sub.f64 	%fd377, %fd376, %fd332;
	add.f64 	%fd336, %fd319, %fd377;
	mul.rn.f64 	%fd378, %fd332, %fd353;
	neg.f64 	%fd326, %fd378;
	// inline asm
	fma.rn.f64 	%fd323, %fd332, %fd353, %fd326;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd327, %fd336, %fd349, %fd323;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd331, %fd332, %fd349, %fd327;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd335, %fd336, %fd353, %fd331;
	// inline asm
	add.f64 	%fd348, %fd378, %fd335;
	sub.f64 	%fd379, %fd378, %fd348;
	add.f64 	%fd352, %fd335, %fd379;
	mul.rn.f64 	%fd380, %fd348, %fd353;
	neg.f64 	%fd342, %fd380;
	// inline asm
	fma.rn.f64 	%fd339, %fd348, %fd353, %fd342;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd343, %fd352, %fd349, %fd339;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd347, %fd348, %fd349, %fd343;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd351, %fd352, %fd353, %fd347;
	// inline asm
	add.f64 	%fd381, %fd380, %fd351;
	sub.f64 	%fd382, %fd380, %fd381;
	add.f64 	%fd383, %fd351, %fd382;
	add.f64 	%fd384, %fd353, %fd381;
	sub.f64 	%fd385, %fd353, %fd384;
	add.f64 	%fd386, %fd381, %fd385;
	add.f64 	%fd387, %fd383, %fd386;
	add.f64 	%fd388, %fd349, %fd387;
	add.f64 	%fd389, %fd384, %fd388;
	sub.f64 	%fd390, %fd384, %fd389;
	add.f64 	%fd391, %fd388, %fd390;
	cvt.rn.f64.s32	%fd392, %r118;
	mov.f64 	%fd393, 0d3FE62E42FEFA3000;
	mul.rn.f64 	%fd394, %fd392, %fd393;
	mov.f64 	%fd395, 0d3D53DE6AF278ECE6;
	mul.rn.f64 	%fd396, %fd392, %fd395;
	add.f64 	%fd397, %fd394, %fd389;
	sub.f64 	%fd398, %fd394, %fd397;
	add.f64 	%fd399, %fd389, %fd398;
	add.f64 	%fd400, %fd391, %fd399;
	add.f64 	%fd401, %fd396, %fd400;
	add.f64 	%fd356, %fd397, %fd401;
	sub.f64 	%fd402, %fd397, %fd356;
	add.f64 	%fd360, %fd401, %fd402;
	mul.rn.f64 	%fd403, %fd356, %fd260;
	neg.f64 	%fd358, %fd403;
	// inline asm
	fma.rn.f64 	%fd355, %fd356, %fd260, %fd358;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd359, %fd360, %fd260, %fd355;
	// inline asm
	add.f64 	%fd53, %fd403, %fd359;
	sub.f64 	%fd404, %fd403, %fd53;
	add.f64 	%fd54, %fd359, %fd404;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r33}, %fd53;
	}
	mov.b32 	 %f1, %r33;
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p52, %f2, 0f40874911;
	@%p52 bra 	BB0_59;
	bra.uni 	BB0_58;

BB0_59:
	mov.f64 	%fd408, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd409, %fd53, %fd408;
	mov.f64 	%fd410, 0d4338000000000000;
	add.rn.f64 	%fd411, %fd409, %fd410;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r34, %temp}, %fd411;
	}
	mov.f64 	%fd412, 0dC338000000000000;
	add.rn.f64 	%fd413, %fd411, %fd412;
	mov.f64 	%fd414, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd415, %fd413, %fd414, %fd53;
	mov.f64 	%fd416, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd417, %fd413, %fd416, %fd415;
	mov.f64 	%fd418, 0d3E928AF3FCA213EA;
	mov.f64 	%fd419, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd420, %fd419, %fd417, %fd418;
	mov.f64 	%fd421, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd422, %fd420, %fd417, %fd421;
	mov.f64 	%fd423, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd424, %fd422, %fd417, %fd423;
	mov.f64 	%fd425, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd426, %fd424, %fd417, %fd425;
	mov.f64 	%fd427, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd428, %fd426, %fd417, %fd427;
	mov.f64 	%fd429, 0d3F81111111122322;
	fma.rn.f64 	%fd430, %fd428, %fd417, %fd429;
	mov.f64 	%fd431, 0d3FA55555555502A1;
	fma.rn.f64 	%fd432, %fd430, %fd417, %fd431;
	mov.f64 	%fd433, 0d3FC5555555555511;
	fma.rn.f64 	%fd434, %fd432, %fd417, %fd433;
	mov.f64 	%fd435, 0d3FE000000000000B;
	fma.rn.f64 	%fd436, %fd434, %fd417, %fd435;
	mov.f64 	%fd437, 0d3FF0000000000000;
	fma.rn.f64 	%fd438, %fd436, %fd417, %fd437;
	fma.rn.f64 	%fd497, %fd438, %fd417, %fd437;
	abs.s32 	%r97, %r34;
	setp.lt.s32	%p55, %r97, 1023;
	@%p55 bra 	BB0_61;
	bra.uni 	BB0_60;

BB0_61:
	shl.b32 	%r103, %r34, 20;
	add.s32 	%r119, %r103, 1072693248;
	bra.uni 	BB0_62;

BB0_58:
	setp.lt.s32	%p53, %r33, 0;
	selp.f64	%fd405, 0d0000000000000000, 0d7FF0000000000000, %p53;
	abs.f64 	%fd406, %fd53;
	setp.gtu.f64	%p54, %fd406, 0d7FF0000000000000;
	add.f64 	%fd407, %fd53, %fd53;
	selp.f64	%fd500, %fd407, %fd405, %p54;
	bra.uni 	BB0_63;

BB0_60:
	add.s32 	%r98, %r34, 2046;
	shl.b32 	%r99, %r98, 19;
	and.b32  	%r100, %r99, -1048576;
	shl.b32 	%r101, %r98, 20;
	sub.s32 	%r119, %r101, %r100;
	mov.u32 	%r102, 0;
	mov.b64 	%fd439, {%r102, %r100};
	mul.f64 	%fd497, %fd497, %fd439;

BB0_62:
	mov.u32 	%r104, 0;
	mov.b64 	%fd440, {%r104, %r119};
	mul.f64 	%fd500, %fd497, %fd440;

BB0_63:
	abs.f64 	%fd441, %fd500;
	setp.eq.f64	%p56, %fd441, 0d7FF0000000000000;
	@%p56 bra 	BB0_65;

	// inline asm
	fma.rn.f64 	%fd500, %fd500, %fd54, %fd500;
	// inline asm

BB0_65:
	setp.neu.f64	%p57, %fd49, 0d3FF0000000000000;
	or.pred  	%p59, %p48, %p57;
	@%p59 bra 	BB0_72;

	mov.b64 	 %rd106, %fd500;
	xor.b64  	%rd107, %rd106, -9223372036854775808;
	mov.b64 	 %fd500, %rd107;

BB0_72:
	mov.u64 	%rd117, __cudart_sin_cos_coeffs;
	mov.f64 	%fd479, 0d400921FB54442D18;
	mov.f64 	%fd478, 0d3FE0000000000000;
	fma.rn.f64 	%fd451, %fd492, %fd500, %fd487;
	mul.f64 	%fd70, %fd451, 0d3FD45F306DC9C883;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r106, %temp}, %fd70;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r107}, %fd70;
	}
	add.s32 	%r108, %r107, 1048576;
	mov.b64 	%fd452, {%r106, %r108};
	cvt.rni.f64.f64	%fd453, %fd452;
	cvt.rzi.s64.f64	%rd110, %fd453;
	cvt.u32.u64	%r38, %rd110;
	neg.f64 	%fd454, %fd453;
	fma.rn.f64 	%fd456, %fd454, %fd478, %fd70;
	mul.f64 	%fd457, %fd456, 0d3CA1A62633145C07;
	fma.rn.f64 	%fd459, %fd456, %fd479, %fd457;
	and.b64  	%rd111, %rd110, 1;
	mul.rn.f64 	%fd71, %fd459, %fd459;
	setp.eq.b64	%p63, %rd111, 1;
	not.pred 	%p64, %p63;
	selp.f64	%fd460, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p64;
	shl.b64 	%rd112, %rd111, 6;
	add.s64 	%rd114, %rd112, %rd117;
	ld.const.f64 	%fd461, [%rd114+8];
	fma.rn.f64 	%fd462, %fd460, %fd71, %fd461;
	ld.const.f64 	%fd463, [%rd114+16];
	fma.rn.f64 	%fd464, %fd462, %fd71, %fd463;
	ld.const.f64 	%fd465, [%rd114+24];
	fma.rn.f64 	%fd466, %fd464, %fd71, %fd465;
	ld.const.f64 	%fd467, [%rd114+32];
	fma.rn.f64 	%fd468, %fd466, %fd71, %fd467;
	ld.const.f64 	%fd469, [%rd114+40];
	fma.rn.f64 	%fd470, %fd468, %fd71, %fd469;
	ld.const.f64 	%fd471, [%rd114+48];
	fma.rn.f64 	%fd72, %fd470, %fd71, %fd471;
	fma.rn.f64 	%fd503, %fd72, %fd459, %fd459;
	@%p64 bra 	BB0_74;

	mov.f64 	%fd472, 0d3FF0000000000000;
	fma.rn.f64 	%fd503, %fd72, %fd71, %fd472;

BB0_74:
	and.b32  	%r109, %r38, 2;
	setp.eq.s32	%p65, %r109, 0;
	@%p65 bra 	BB0_76;

	mov.f64 	%fd473, 0d0000000000000000;
	mov.f64 	%fd474, 0dBFF0000000000000;
	fma.rn.f64 	%fd503, %fd503, %fd474, %fd473;

BB0_76:
	cvt.rzi.f64.f64	%fd475, %fd70;
	setp.neu.f64	%p66, %fd475, %fd70;
	@%p66 bra 	BB0_78;

	mov.f64 	%fd476, 0d0000000000000000;
	mul.rn.f64 	%fd503, %fd70, %fd476;

BB0_78:
	ld.param.u64 	%rd118, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_0];
	add.s64 	%rd116, %rd118, %rd52;
	sub.f64 	%fd477, %fd503, %fd9;
	st.global.f64 	[%rd116], %fd477;
	ret;
}


  